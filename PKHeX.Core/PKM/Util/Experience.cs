namespace PKHeX.Core;

/// <summary>
/// Calculations for <see cref="PKM.EXP"/> and <see cref="PKM.CurrentLevel"/>.
/// </summary>
public static class Experience
{
    /// <summary>
    /// Gets the current level of a species.
    /// </summary>
    /// <param name="exp">Experience points</param>
    /// <param name="growth">Experience growth rate</param>
    /// <returns>Current level of the species.</returns>
    public static int GetLevel(uint exp, byte growth)
    {
        if (exp >= ExpTable[99, growth])
            return 100;
        int tl = 1; // Initial Level. Iterate upwards to find the level
        while (exp >= ExpTable[tl, growth])
            ++tl;
        return tl;
    }

    /// <summary>
    /// Gets the minimum Experience points for the specified level.
    /// </summary>
    /// <param name="level">Current level</param>
    /// <param name="growth">Growth Rate type</param>
    /// <returns>Experience points needed to have specified level.</returns>
    public static uint GetEXP(int level, byte growth)
    {
        if (level <= 1)
            return 0;
        if (level > 100)
            level = 100;
        return ExpTable[level - 1, growth];
    }

    /// <summary>
    /// Gets the <see cref="PKM.Nature"/> value for <see cref="PK1"/> / <see cref="PK2"/> entries based on the <see cref="PKM.EXP"/>
    /// </summary>
    /// <param name="experience">Current Experience</param>
    /// <returns>Nature ID (<see cref="Nature"/>)</returns>
    public static int GetNatureVC(uint experience) => (int)(experience % 25);

    /// <summary>
    /// Gets the amount of EXP to be earned until the next level-up occurs.
    /// </summary>
    /// <param name="level">Current Level</param>
    /// <param name="growth">Growth Rate type</param>
    /// <returns>EXP to level up</returns>
    public static uint GetEXPToLevelUp(int level, byte growth)
    {
        if ((uint)level >= 100)
            return 0;
        var current = ExpTable[level - 1, growth];
        var next = ExpTable[level, growth];
        return next - current;
    }

    /// <summary>
    /// Gets a percentage for Experience Bar progress indication.
    /// </summary>
    /// <param name="level">Current Level</param>
    /// <param name="exp">Current Experience</param>
    /// <param name="growth">Growth Rate type</param>
    /// <returns>Percentage [0,1.00)</returns>
    public static double GetEXPToLevelUpPercentage(int level, uint exp, byte growth)
    {
        if ((uint)level >= 100)
            return 0;
        var current = ExpTable[level - 1, growth];
        var next = ExpTable[level, growth];
        var amount = next - current;
        double progress = exp - current;
        return progress / amount;
    }

    #region ExpTable

    /// <summary>
    /// Experience required for next level [0,99]
    /// </summary>
    private static readonly uint[,] ExpTable =
    {
        {0000000, 0000000, 0000000, 0000000, 0000000, 0000000},
        {0000010, 0000010, 0000010, 0000010, 0000010, 0000010},
        {0000033, 0000033, 0000033, 0000033, 0000033, 0000033},
        {0000080, 0000080, 0000080, 0000080, 0000080, 0000080},
        {0000156, 0000156, 0000156, 0000156, 0000156, 0000156},
        {0000270, 0000270, 0000270, 0000270, 0000270, 0000270},
        {0000428, 0000428, 0000428, 0000428, 0000428, 0000428},
        {0000640, 0000640, 0000640, 0000640, 0000640, 0000640},
        {0000911, 0000911, 0000911, 0000911, 0000911, 0000911},
        {0001250, 0001250, 0001250, 0001250, 0001250, 0001250},
        {0001663, 0001663, 0001663, 0001663, 0001663, 0001663},
        {0002160, 0002160, 0002160, 0002160, 0002160, 0002160},
        {0002746, 0002746, 0002746, 0002746, 0002746, 0002746},
        {0003430, 0003430, 0003430, 0003430, 0003430, 0003430},
        {0004218, 0004218, 0004218, 0004218, 0004218, 0004218},
        {0005120, 0005120, 0005120, 0005120, 0005120, 0005120},
        {0006141, 0006141, 0006141, 0006141, 0006141, 0006141},
        {0007290, 0007290, 0007290, 0007290, 0007290, 0007290},
        {0008573, 0008573, 0008573, 0008573, 0008573, 0008573},
        {0010000, 0010000, 0010000, 0010000, 0010000, 0010000},
        {0011576, 0011576, 0011576, 0011576, 0011576, 0011576},
        {0013310, 0013310, 0013310, 0013310, 0013310, 0013310},
        {0015208, 0015208, 0015208, 0015208, 0015208, 0015208},
        {0017280, 0017280, 0017280, 0017280, 0017280, 0017280},
        {0019531, 0019531, 0019531, 0019531, 0019531, 0019531},
        {0021970, 0021970, 0021970, 0021970, 0021970, 0021970},
        {0024603, 0024603, 0024603, 0024603, 0024603, 0024603},
        {0027440, 0027440, 0027440, 0027440, 0027440, 0027440},
        {0030486, 0030486, 0030486, 0030486, 0030486, 0030486},
        {0033750, 0033750, 0033750, 0033750, 0033750, 0033750},
        {0037238, 0037238, 0037238, 0037238, 0037238, 0037238},
        {0040960, 0040960, 0040960, 0040960, 0040960, 0040960},
        {0044921, 0044921, 0044921, 0044921, 0044921, 0044921},
        {0049130, 0049130, 0049130, 0049130, 0049130, 0049130},
        {0053593, 0053593, 0053593, 0053593, 0053593, 0053593},
        {0058320, 0058320, 0058320, 0058320, 0058320, 0058320},
        {0063316, 0063316, 0063316, 0063316, 0063316, 0063316},
        {0068590, 0068590, 0068590, 0068590, 0068590, 0068590},
        {0074148, 0074148, 0074148, 0074148, 0074148, 0074148},
        {0080000, 0080000, 0080000, 0080000, 0080000, 0080000},
        {0086151, 0086151, 0086151, 0086151, 0086151, 0086151},
        {0092610, 0092610, 0092610, 0092610, 0092610, 0092610},
        {0099383, 0099383, 0099383, 0099383, 0099383, 0099383},
        {0106480, 0106480, 0106480, 0106480, 0106480, 0106480},
        {0113906, 0113906, 0113906, 0113906, 0113906, 0113906},
        {0121670, 0121670, 0121670, 0121670, 0121670, 0121670},
        {0129778, 0129778, 0129778, 0129778, 0129778, 0129778},
        {0138240, 0138240, 0138240, 0138240, 0138240, 0138240},
        {0147061, 0147061, 0147061, 0147061, 0147061, 0147061},
        {0156250, 0156250, 0156250, 0156250, 0156250, 0156250},
        {0165813, 0165813, 0165813, 0165813, 0165813, 0165813},
        {0175760, 0175760, 0175760, 0175760, 0175760, 0175760},
        {0186096, 0186096, 0186096, 0186096, 0186096, 0186096},
        {0196830, 0196830, 0196830, 0196830, 0196830, 0196830},
        {0207968, 0207968, 0207968, 0207968, 0207968, 0207968},
        {0219520, 0219520, 0219520, 0219520, 0219520, 0219520},
        {0231491, 0231491, 0231491, 0231491, 0231491, 0231491},
        {0243890, 0243890, 0243890, 0243890, 0243890, 0243890},
        {0256723, 0256723, 0256723, 0256723, 0256723, 0256723},
        {0270000, 0270000, 0270000, 0270000, 0270000, 0270000},
        {0283726, 0283726, 0283726, 0283726, 0283726, 0283726},
        {0297910, 0297910, 0297910, 0297910, 0297910, 0297910},
        {0312558, 0312558, 0312558, 0312558, 0312558, 0312558},
        {0327680, 0327680, 0327680, 0327680, 0327680, 0327680},
        {0343281, 0343281, 0343281, 0343281, 0343281, 0343281},
        {0359370, 0359370, 0359370, 0359370, 0359370, 0359370},
        {0375953, 0375953, 0375953, 0375953, 0375953, 0375953},
        {0393040, 0393040, 0393040, 0393040, 0393040, 0393040},
        {0410636, 0410636, 0410636, 0410636, 0410636, 0410636},
        {0428750, 0428750, 0428750, 0428750, 0428750, 0428750},
        {0447388, 0447388, 0447388, 0447388, 0447388, 0447388},
        {0466560, 0466560, 0466560, 0466560, 0466560, 0466560},
        {0486271, 0486271, 0486271, 0486271, 0486271, 0486271},
        {0506530, 0506530, 0506530, 0506530, 0506530, 0506530},
        {0527343, 0527343, 0527343, 0527343, 0527343, 0527343},
        {0548720, 0548720, 0548720, 0548720, 0548720, 0548720},
        {0570666, 0570666, 0570666, 0570666, 0570666, 0570666},
        {0593190, 0593190, 0593190, 0593190, 0593190, 0593190},
        {0616298, 0616298, 0616298, 0616298, 0616298, 0616298},
        {0640000, 0640000, 0640000, 0640000, 0640000, 0640000},
        {0664301, 0664301, 0664301, 0664301, 0664301, 0664301},
        {0689210, 0689210, 0689210, 0689210, 0689210, 0689210},
        {0714733, 0714733, 0714733, 0714733, 0714733, 0714733},
        {0740880, 0740880, 0740880, 0740880, 0740880, 0740880},
        {0767656, 0767656, 0767656, 0767656, 0767656, 0767656},
        {0795070, 0795070, 0795070, 0795070, 0795070, 0795070},
        {0823128, 0823128, 0823128, 0823128, 0823128, 0823128},
        {0851840, 0851840, 0851840, 0851840, 0851840, 0851840},
        {0881211, 0881211, 0881211, 0881211, 0881211, 0881211},
        {0911250, 0911250, 0911250, 0911250, 0911250, 0911250},
        {0941963, 0941963, 0941963, 0941963, 0941963, 0941963},
        {0973360, 0973360, 0973360, 0973360, 0973360, 0973360},
        {1005446, 1005446, 1005446, 1005446, 1005446, 1005446},
        {1038230, 1038230, 1038230, 1038230, 1038230, 1038230},
        {1071718, 1071718, 1071718, 1071718, 1071718, 1071718},
        {1105920, 1105920, 1105920, 1105920, 1105920, 1105920},
        {1140841, 1140841, 1140841, 1140841, 1140841, 1140841},
        {1176490, 1176490, 1176490, 1176490, 1176490, 1176490},
        {1212873, 1212873, 1212873, 1212873, 1212873, 1212873},
        {1250000, 1250000, 1250000, 1250000, 1250000, 1250000},
    };

    #endregion
}
